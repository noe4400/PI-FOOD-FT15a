{"ast":null,"code":"var _jsxFileName = \"/home/noe4400/Documents/react-projects/PI-FOOD-FT15a/client/src/components/ActivityForm/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './RecipeForm.css';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDietTypes, postRecipe, setLoading } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = () => {\n  _s();\n\n  const isLoading = useSelector(state => state.isLoading);\n  const postErr = useSelector(state => state.postErr);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDietTypes());\n  }, []);\n  const [userInput, setInput] = useState({\n    name: '',\n    score: 0,\n    healthScore: 0,\n    summary: '',\n    steps: '',\n    dietTypesArray: [],\n    hasBeenSubmitted: false\n  });\n  const [inputValidation, setInputValidation] = useState({\n    isInputNameTouch: false,\n    isSummaryInputTouched: false\n  });\n  const enteredRecipesName = userInput.name.trim() !== '';\n  const enteredSummary = userInput.summary.trim() !== '';\n  const recipeNameIsValid = !enteredRecipesName && inputValidation.isInputNameTouch;\n  const summaryIsValid = !enteredSummary && inputValidation.isSummaryInputTouched;\n\n  const onBlurHandlerValidation = e => {\n    setInputValidation(prevState => {\n      if (e.target.name === 'name') return { ...prevState,\n        isInputNameTouch: true\n      };\n      if (e.target.name === 'summary') return { ...prevState,\n        isSummaryInputTouched: true\n      };\n    });\n  };\n\n  let isFormValid = false;\n\n  if (enteredRecipesName && enteredSummary) {\n    isFormValid = true;\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(setLoading(true));\n    dispatch(postRecipe(userInput));\n    setInput(prevState => {\n      return { ...prevState,\n        name: '',\n        score: 0,\n        healthScore: 0,\n        summary: '',\n        steps: '',\n        dietTypesArray: [],\n        hasBeenSubmitted: true\n      };\n    });\n  };\n\n  const dietTypes = useSelector(state => state.dietTypes);\n  const auxDietTypes = [...userInput.dietTypesArray];\n\n  const handleCheckDietTypeElement = e => {\n    dietTypes.forEach(diet => {\n      if (diet === e.target.value) {\n        if (e.target.checked) {\n          auxDietTypes.push(e.target.value);\n        } else {\n          const index = auxDietTypes.indexOf(e.target.value);\n          console.log(index);\n\n          if (index !== -1 && auxDietTypes.length > 0) {\n            auxDietTypes.splice(index, 1);\n          }\n        }\n      }\n    });\n    console.log(auxDietTypes);\n    setInput(prevState => {\n      return { ...prevState,\n        dietTypesArray: auxDietTypes\n      };\n    });\n  };\n\n  const inputHandler = e => {\n    if (e.target.name === 'name') {\n      setInput(prevState => {\n        return { ...prevState,\n          name: e.target.value\n        };\n      });\n    }\n\n    if (e.target.name === 'summary') {\n      setInput(prevState => {\n        return { ...prevState,\n          summary: e.target.value\n        };\n      });\n    }\n\n    if (e.target.name === 'steps') {\n      setInput(prevState => {\n        return { ...prevState,\n          steps: e.target.value\n        };\n      });\n    }\n\n    if (e.target.name === 'score') {\n      setInput(prevState => {\n        return { ...prevState,\n          score: e.target.value\n        };\n      });\n    }\n\n    if (e.target.name === 'healthScore') {\n      setInput(prevState => {\n        return { ...prevState,\n          healthScore: e.target.value\n        };\n      });\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading-message\",\n      children: \"Creating recipe please wait....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this);\n  }\n\n  const DietOptions = dietTypes.map((e, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n    for: `opt${index}`,\n    className: \"radio\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: `opt${index}`,\n      className: \"radio-input\",\n      name: \"diets\",\n      value: e,\n      onClick: handleCheckDietTypeElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio__radio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this), e]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Add your own recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe's name*:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `input ${recipeNameIsValid ? 'invalid' : ''}`,\n          type: \"text\",\n          name: \"name\",\n          value: userInput.name,\n          onChange: inputHandler,\n          onBlur: onBlurHandlerValidation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe's score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"number\",\n          name: \"score\",\n          value: userInput.score,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe's health score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"number\",\n          name: \"healthScore\",\n          value: userInput.healthScore,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe's summary*:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `textarea ${summaryIsValid ? 'invalid' : ''}`,\n          value: userInput.summary,\n          name: \"summary\",\n          onChange: inputHandler,\n          onBlur: onBlurHandlerValidation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe's steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea\",\n          name: \"steps\",\n          value: userInput.steps,\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Select the diet or diets for your recipe:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: DietOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Recipe\",\n          className: \"btn\",\n          onClick: submitHandler,\n          disabled: !isFormValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this), !postErr && userInput.hasBeenSubmitted && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading-message\",\n      children: \"Recipe was created succesfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }, this), postErr && userInput.hasBeenSubmitted && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loading-message\",\n      children: \"Unable to create recipe, please try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RecipeForm, \"95wIF34NIKyhq2klwVUjd0gs4iE=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/home/noe4400/Documents/react-projects/PI-FOOD-FT15a/client/src/components/ActivityForm/RecipeForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getDietTypes","postRecipe","setLoading","RecipeForm","isLoading","state","postErr","dispatch","userInput","setInput","name","score","healthScore","summary","steps","dietTypesArray","hasBeenSubmitted","inputValidation","setInputValidation","isInputNameTouch","isSummaryInputTouched","enteredRecipesName","trim","enteredSummary","recipeNameIsValid","summaryIsValid","onBlurHandlerValidation","e","prevState","target","isFormValid","submitHandler","preventDefault","dietTypes","auxDietTypes","handleCheckDietTypeElement","forEach","diet","value","checked","push","index","indexOf","console","log","length","splice","inputHandler","DietOptions","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,eAArD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAME,OAAO,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA3B;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACQ,SAAD,EAAYC,QAAZ,IAAwBZ,QAAQ,CAAC;AACtCa,IAAAA,IAAI,EAAE,EADgC;AAEtCC,IAAAA,KAAK,EAAE,CAF+B;AAGtCC,IAAAA,WAAW,EAAE,CAHyB;AAItCC,IAAAA,OAAO,EAAE,EAJ6B;AAKtCC,IAAAA,KAAK,EAAE,EAL+B;AAMtCC,IAAAA,cAAc,EAAE,EANsB;AAOtCC,IAAAA,gBAAgB,EAAE;AAPoB,GAAD,CAAtC;AAUA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC;AACtDsB,IAAAA,gBAAgB,EAAE,KADoC;AAEtDC,IAAAA,qBAAqB,EAAE;AAF+B,GAAD,CAAtD;AAKA,QAAMC,kBAAkB,GAAGb,SAAS,CAACE,IAAV,CAAeY,IAAf,OAA0B,EAArD;AACA,QAAMC,cAAc,GAAGf,SAAS,CAACK,OAAV,CAAkBS,IAAlB,OAA6B,EAApD;AAEA,QAAME,iBAAiB,GACtB,CAACH,kBAAD,IAAuBJ,eAAe,CAACE,gBADxC;AAEA,QAAMM,cAAc,GACnB,CAACF,cAAD,IAAmBN,eAAe,CAACG,qBADpC;;AAGA,QAAMM,uBAAuB,GAAGC,CAAC,IAAI;AACpCT,IAAAA,kBAAkB,CAACU,SAAS,IAAI;AAC/B,UAAID,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,MAAtB,EACC,OAAO,EACN,GAAGkB,SADG;AAENT,QAAAA,gBAAgB,EAAE;AAFZ,OAAP;AAID,UAAIQ,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,SAAtB,EACC,OAAO,EACN,GAAGkB,SADG;AAENR,QAAAA,qBAAqB,EAAE;AAFjB,OAAP;AAID,KAXiB,CAAlB;AAYA,GAbD;;AAeA,MAAIU,WAAW,GAAG,KAAlB;;AACA,MAAIT,kBAAkB,IAAIE,cAA1B,EAA0C;AACzCO,IAAAA,WAAW,GAAG,IAAd;AACA;;AACD,QAAMC,aAAa,GAAGJ,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAzB,IAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACAK,IAAAA,QAAQ,CAACN,UAAU,CAACO,SAAD,CAAX,CAAR;AACAC,IAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,aAAO,EACN,GAAGA,SADG;AAENlB,QAAAA,IAAI,EAAE,EAFA;AAGNC,QAAAA,KAAK,EAAE,CAHD;AAINC,QAAAA,WAAW,EAAE,CAJP;AAKNC,QAAAA,OAAO,EAAE,EALH;AAMNC,QAAAA,KAAK,EAAE,EAND;AAONC,QAAAA,cAAc,EAAE,EAPV;AAQNC,QAAAA,gBAAgB,EAAE;AARZ,OAAP;AAUA,KAXO,CAAR;AAYA,GAhBD;;AAkBA,QAAMiB,SAAS,GAAGlC,WAAW,CAACM,KAAK,IAAIA,KAAK,CAAC4B,SAAhB,CAA7B;AAEA,QAAMC,YAAY,GAAG,CAAC,GAAG1B,SAAS,CAACO,cAAd,CAArB;;AAEA,QAAMoB,0BAA0B,GAAGR,CAAC,IAAI;AACvCM,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAI,IAAI;AACzB,UAAIA,IAAI,KAAKV,CAAC,CAACE,MAAF,CAASS,KAAtB,EAA6B;AAC5B,YAAIX,CAAC,CAACE,MAAF,CAASU,OAAb,EAAsB;AACrBL,UAAAA,YAAY,CAACM,IAAb,CAAkBb,CAAC,CAACE,MAAF,CAASS,KAA3B;AACA,SAFD,MAEO;AACN,gBAAMG,KAAK,GAAGP,YAAY,CAACQ,OAAb,CAAqBf,CAAC,CAACE,MAAF,CAASS,KAA9B,CAAd;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,cAAIA,KAAK,KAAK,CAAC,CAAX,IAAgBP,YAAY,CAACW,MAAb,GAAsB,CAA1C,EAA6C;AAC5CX,YAAAA,YAAY,CAACY,MAAb,CAAoBL,KAApB,EAA2B,CAA3B;AACA;AACD;AACD;AACD,KAZD;AAcAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACAzB,IAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,aAAO,EACN,GAAGA,SADG;AAENb,QAAAA,cAAc,EAAEmB;AAFV,OAAP;AAIA,KALO,CAAR;AAMA,GAtBD;;AAwBA,QAAMa,YAAY,GAAGpB,CAAC,IAAI;AACzB,QAAIA,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,MAAtB,EAA8B;AAC7BD,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,eAAO,EACN,GAAGA,SADG;AAENlB,UAAAA,IAAI,EAAEiB,CAAC,CAACE,MAAF,CAASS;AAFT,SAAP;AAIA,OALO,CAAR;AAMA;;AAED,QAAIX,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,SAAtB,EAAiC;AAChCD,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,eAAO,EACN,GAAGA,SADG;AAENf,UAAAA,OAAO,EAAEc,CAAC,CAACE,MAAF,CAASS;AAFZ,SAAP;AAIA,OALO,CAAR;AAMA;;AAED,QAAIX,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,OAAtB,EAA+B;AAC9BD,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,eAAO,EACN,GAAGA,SADG;AAENd,UAAAA,KAAK,EAAEa,CAAC,CAACE,MAAF,CAASS;AAFV,SAAP;AAIA,OALO,CAAR;AAMA;;AAED,QAAIX,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,OAAtB,EAA+B;AAC9BD,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,eAAO,EACN,GAAGA,SADG;AAENjB,UAAAA,KAAK,EAAEgB,CAAC,CAACE,MAAF,CAASS;AAFV,SAAP;AAIA,OALO,CAAR;AAMA;;AAED,QAAIX,CAAC,CAACE,MAAF,CAASnB,IAAT,KAAkB,aAAtB,EAAqC;AACpCD,MAAAA,QAAQ,CAACmB,SAAS,IAAI;AACrB,eAAO,EACN,GAAGA,SADG;AAENhB,UAAAA,WAAW,EAAEe,CAAC,CAACE,MAAF,CAASS;AAFhB,SAAP;AAIA,OALO,CAAR;AAMA;AACD,GA7CD;;AA8CA,MAAIlC,SAAJ,EAAe;AACd,wBACC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAGA;;AACD,QAAM4C,WAAW,GAAGf,SAAS,CAACgB,GAAV,CAAc,CAACtB,CAAD,EAAIc,KAAJ,kBACjC;AAAO,IAAA,GAAG,EAAG,MAAKA,KAAM,EAAxB;AAA2B,IAAA,SAAS,EAAC,OAArC;AAAA,4BACC;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,EAAE,EAAG,MAAKA,KAAM,EAFjB;AAGC,MAAA,SAAS,EAAC,aAHX;AAIC,MAAA,IAAI,EAAC,OAJN;AAKC,MAAA,KAAK,EAAEd,CALR;AAMC,MAAA,OAAO,EAAEQ;AANV;AAAA;AAAA;AAAA;AAAA,YADD,eASC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YATD,EAUER,CAVF;AAAA,KAAkDc,KAAlD;AAAA;AAAA;AAAA;AAAA,UADmB,CAApB;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,SAAS,EAAG,SACXjB,iBAAiB,GAAG,SAAH,GAAe,EAChC,EAHF;AAIC,UAAA,IAAI,EAAC,MAJN;AAKC,UAAA,IAAI,EAAC,MALN;AAMC,UAAA,KAAK,EAAEhB,SAAS,CAACE,IANlB;AAOC,UAAA,QAAQ,EAAEqC,YAPX;AAQC,UAAA,MAAM,EAAErB;AART;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAeC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,SAAS,EAAC,OADX;AAEC,UAAA,IAAI,EAAC,QAFN;AAGC,UAAA,IAAI,EAAC,OAHN;AAIC,UAAA,KAAK,EAAElB,SAAS,CAACG,KAJlB;AAKC,UAAA,QAAQ,EAAEoC;AALX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD,eAyBC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,SAAS,EAAC,OADX;AAEC,UAAA,IAAI,EAAC,QAFN;AAGC,UAAA,IAAI,EAAC,aAHN;AAIC,UAAA,KAAK,EAAEvC,SAAS,CAACI,WAJlB;AAKC,UAAA,QAAQ,EAAEmC;AALX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBD,eAmCC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,SAAS,EAAG,YACXtB,cAAc,GAAG,SAAH,GAAe,EAC7B,EAHF;AAIC,UAAA,KAAK,EAAEjB,SAAS,CAACK,OAJlB;AAKC,UAAA,IAAI,EAAC,SALN;AAMC,UAAA,QAAQ,EAAEkC,YANX;AAOC,UAAA,MAAM,EAAErB;AAPT;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCD,eAgDC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,SAAS,EAAC,UADX;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,KAAK,EAAElB,SAAS,CAACM,KAHlB;AAIC,UAAA,QAAQ,EAAEiC;AAJX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDD,eA0DC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DD,eAiEC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,KAAK,EAAC,YAFP;AAGC,UAAA,SAAS,EAAC,KAHX;AAIC,UAAA,OAAO,EAAEjB,aAJV;AAKC,UAAA,QAAQ,EAAE,CAACD;AALZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAjED;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EA6EE,CAACxB,OAAD,IAAYE,SAAS,CAACQ,gBAAtB,iBACA;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9EF,EAkFEV,OAAO,IAAIE,SAAS,CAACQ,gBAArB,iBACA;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0FA,CA3PD;;GAAMb,U;UACaJ,W,EACFA,W,EACCD,W,EAiECC,W;;;KApEbI,U;AA6PN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport './RecipeForm.css';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDietTypes, postRecipe, setLoading } from '../../actions';\n\nconst RecipeForm = () => {\n\tconst isLoading = useSelector(state => state.isLoading);\n\tconst postErr = useSelector(state => state.postErr);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(getDietTypes());\n\t}, []);\n\n\tconst [userInput, setInput] = useState({\n\t\tname: '',\n\t\tscore: 0,\n\t\thealthScore: 0,\n\t\tsummary: '',\n\t\tsteps: '',\n\t\tdietTypesArray: [],\n\t\thasBeenSubmitted: false,\n\t});\n\n\tconst [inputValidation, setInputValidation] = useState({\n\t\tisInputNameTouch: false,\n\t\tisSummaryInputTouched: false,\n\t});\n\n\tconst enteredRecipesName = userInput.name.trim() !== '';\n\tconst enteredSummary = userInput.summary.trim() !== '';\n\n\tconst recipeNameIsValid =\n\t\t!enteredRecipesName && inputValidation.isInputNameTouch;\n\tconst summaryIsValid =\n\t\t!enteredSummary && inputValidation.isSummaryInputTouched;\n\n\tconst onBlurHandlerValidation = e => {\n\t\tsetInputValidation(prevState => {\n\t\t\tif (e.target.name === 'name')\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tisInputNameTouch: true,\n\t\t\t\t};\n\t\t\tif (e.target.name === 'summary')\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tisSummaryInputTouched: true,\n\t\t\t\t};\n\t\t});\n\t};\n\n\tlet isFormValid = false;\n\tif (enteredRecipesName && enteredSummary) {\n\t\tisFormValid = true;\n\t}\n\tconst submitHandler = e => {\n\t\te.preventDefault();\n\t\tdispatch(setLoading(true));\n\t\tdispatch(postRecipe(userInput));\n\t\tsetInput(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tname: '',\n\t\t\t\tscore: 0,\n\t\t\t\thealthScore: 0,\n\t\t\t\tsummary: '',\n\t\t\t\tsteps: '',\n\t\t\t\tdietTypesArray: [],\n\t\t\t\thasBeenSubmitted: true,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst dietTypes = useSelector(state => state.dietTypes);\n\n\tconst auxDietTypes = [...userInput.dietTypesArray];\n\n\tconst handleCheckDietTypeElement = e => {\n\t\tdietTypes.forEach(diet => {\n\t\t\tif (diet === e.target.value) {\n\t\t\t\tif (e.target.checked) {\n\t\t\t\t\tauxDietTypes.push(e.target.value);\n\t\t\t\t} else {\n\t\t\t\t\tconst index = auxDietTypes.indexOf(e.target.value);\n\t\t\t\t\tconsole.log(index);\n\t\t\t\t\tif (index !== -1 && auxDietTypes.length > 0) {\n\t\t\t\t\t\tauxDietTypes.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(auxDietTypes);\n\t\tsetInput(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tdietTypesArray: auxDietTypes,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst inputHandler = e => {\n\t\tif (e.target.name === 'name') {\n\t\t\tsetInput(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tname: e.target.value,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (e.target.name === 'summary') {\n\t\t\tsetInput(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tsummary: e.target.value,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (e.target.name === 'steps') {\n\t\t\tsetInput(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tsteps: e.target.value,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (e.target.name === 'score') {\n\t\t\tsetInput(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tscore: e.target.value,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (e.target.name === 'healthScore') {\n\t\t\tsetInput(prevState => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\thealthScore: e.target.value,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<h2 className='loading-message'>Creating recipe please wait....</h2>\n\t\t);\n\t}\n\tconst DietOptions = dietTypes.map((e, index) => (\n\t\t<label for={`opt${index}`} className='radio' key={index}>\n\t\t\t<input\n\t\t\t\ttype='checkbox'\n\t\t\t\tid={`opt${index}`}\n\t\t\t\tclassName='radio-input'\n\t\t\t\tname='diets'\n\t\t\t\tvalue={e}\n\t\t\t\tonClick={handleCheckDietTypeElement}\n\t\t\t/>\n\t\t\t<div className='radio__radio'></div>\n\t\t\t{e}\n\t\t</label>\n\t));\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<div className='title'>Add your own recipe</div>\n\t\t\t<div className='form'>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label>Recipe's name*:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={`input ${\n\t\t\t\t\t\t\trecipeNameIsValid ? 'invalid' : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\tvalue={userInput.name}\n\t\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\t\tonBlur={onBlurHandlerValidation}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label>Recipe's score:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='score'\n\t\t\t\t\t\tvalue={userInput.score}\n\t\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label>Recipe's health score:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tname='healthScore'\n\t\t\t\t\t\tvalue={userInput.healthScore}\n\t\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label>Recipe's summary*:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName={`textarea ${\n\t\t\t\t\t\t\tsummaryIsValid ? 'invalid' : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tvalue={userInput.summary}\n\t\t\t\t\t\tname='summary'\n\t\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\t\tonBlur={onBlurHandlerValidation}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<label>Recipe's steps:</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='textarea'\n\t\t\t\t\t\tname='steps'\n\t\t\t\t\t\tvalue={userInput.steps}\n\t\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='checkbox-container'>\n\t\t\t\t\t<div className='title'>\n\t\t\t\t\t\tSelect the diet or diets for your recipe:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='box'>{DietOptions}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tvalue='Add Recipe'\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\t\tdisabled={!isFormValid}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{!postErr && userInput.hasBeenSubmitted && (\n\t\t\t\t<h2 className='loading-message'>\n\t\t\t\t\tRecipe was created succesfully\n\t\t\t\t</h2>\n\t\t\t)}\n\t\t\t{postErr && userInput.hasBeenSubmitted && (\n\t\t\t\t<h2 className='loading-message'>\n\t\t\t\t\tUnable to create recipe, please try again!\n\t\t\t\t</h2>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}